<!doctype html>

<html lang="en">

<head>
    <title>Laravel - The PHP Framework For Web Artisans.</title>

    <!-- meta -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=9,chrome=1">
    <meta name="author" content="iKreativ">
    <meta name="description" content="Laravel - The PHP framework for web artisans.">
    <meta name="keywords" content="laravel, php, framework, web, artisans, taylor otwell">

    <!-- favicon -->
    <link rel="shortcut icon" href="../favicon.png?v=2">

    <!-- we're minifying and combining all our css -->
    <link href="../assets/css/style.css" rel="stylesheet">

    <!-- grab jquery from google cdn. fall back to local if offline -->
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
    <script>window.jQuery || document.write('<script src="../assets/js/jquery.js"><\/script>')</script>

    <!-- prettyprint -->
    <script src="http://google-code-prettify.googlecode.com/svn/loader/run_prettify.js"></script>

    <!-- load up our js -->
    <script src="../assets/js/plugins.js"></script>
    <script src="../assets/js/application.js"></script>

    <!-- fonts -->
    <script src="http://use.edgefonts.net/source-sans-pro:n3,i3,n4,i4,n6,i6,n7,i7.js"></script>
    <script src="http://use.edgefonts.net/source-code-pro.js"></script>

    <!-- some conditionals for ie -->
    <!--[if IE]><link href="assets/css/ie.css" rel="stylesheet" type="text/css" /><![endif]-->

    <!-- HTML5 elements in less than IE9, yes please! -->
    <!--[if lt IE 9]><script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script><![endif]-->

    <!-- If less than IE8 add some JS for the webfont icons -->
    <!--[if lt IE 8]><script src="assets/js/ie_font.js"></script><![endif]-->

    <!-- asynchronous google analytics. change UA-XXXXX-X to your site's ID -->
    <script>
        var _gaq=[['_setAccount','UA-23865777-1'],['_trackPageview']];
        (function(d,t){
    		var g=d.createElement(t),s=d.getElementsByTagName(t)[0];
        	g.src=('https:'==location.protocol?'//ssl':'//www')+'.google-analytics.com/ga.js';
        	s.parentNode.insertBefore(g,s)
    	}(document,'script'));
    </script>
</head>

<body id="index" class="page docs">

	<!-- wrapper -->
    <div id="wrapper">

        <!-- header -->
        <header id="header" role="header">
            <div class="boxed">
                <!-- tagline -->
                <div id="tagline">
                    <h1>Documentation.</h1>
                </div>
                <!-- /tagline -->

                <!-- version -->
                <div id="version">
                    <ul class="nolist">
                                                    <li><a href="dev" title="Dev">Dev</a></li>
                            <li><a href="4-1" title="4.1">4.1</a></li>
                            <li class="current"><a href="4-0" title="4.0">4.0</a></li>
                                            </ul>
                </div>
                <!-- /version -->
            </div>
        </header>
        <!-- /header -->

        <!-- nav -->
    	<nav id="primary">
    	    <div class="boxed">
    	        <div id="logo-head">
    	           <a href="../index.html"><img src="../assets/img/logo-head.png" alt="Laravel" /></a>
    	        </div>
                <ul>
                    <li><a href="../index.html">Welcome</a></li>
                    <li class="current-item"><a href="docs" title="Documentation">Documentation</a></li>
                    <li><a href="../api/4.0" title="Laravel Framework API">API</a></li>
                    <li><a href="https://github.com/laravel/laravel" title="Github">Github</a></li>
                    <li><a href="http://laravel.io/forum" title="Laravel Forums">Forums</a></li>
                    <li><a href="http://twitter.com/laravelphp" title="Laravel on Twitter">Twitter</a></li>
                </ul>
            </div>
        </nav>
        <!-- /nav -->

        <!-- content -->
        <div id="content">

            <!-- docs -->
            <section id="documentation">
                <article class="boxed">

                    <!-- docs nav -->
                    <nav id="docs">
                        <!-- Pull table of contents -->
                        <ul>
<li>Preface

<ul>
<li><a href="introduction">Introduction</a></li>
<li><a href="quick">Quickstart</a></li>
<li><a href="contributing">Contributing</a></li>
</ul></li>
<li>Getting Started

<ul>
<li><a href="installation">Installation</a></li>
<li><a href="configuration">Configuration</a></li>
<li><a href="lifecycle">Request Lifecycle</a></li>
<li><a href="routing">Routing</a></li>
<li><a href="requests">Requests &amp; Input</a></li>
<li><a href="responses">Views &amp; Responses</a></li>
<li><a href="controllers">Controllers</a></li>
<li><a href="errors">Errors &amp; Logging</a></li>
</ul></li>
<li>Learning More

<ul>
<li><a href="cache">Cache</a></li>
<li><a href="extending">Core Extension</a></li>
<li><a href="events">Events</a></li>
<li><a href="facades">Facades</a></li>
<li><a href="html">Forms &amp; HTML</a></li>
<li><a href="helpers">Helpers</a></li>
<li><a href="ioc">IoC Container</a></li>
<li><a href="localization">Localization</a></li>
<li><a href="mail">Mail</a></li>
<li><a href="packages">Package Development</a></li>
<li><a href="pagination">Pagination</a></li>
<li><a href="queues">Queues</a></li>
<li><a href="security">Security</a></li>
<li><a href="session">Session</a></li>
<li><a href="templates">Templates</a></li>
<li><a href="testing">Unit Testing</a></li>
<li><a href="validation">Validation</a></li>
</ul></li>
<li>Database

<ul>
<li><a href="database">Basic Usage</a></li>
<li><a href="queries">Query Builder</a></li>
<li><a href="eloquent">Eloquent ORM</a></li>
<li><a href="schema">Schema Builder</a></li>
<li><a href="migrations">Migrations &amp; Seeding</a></li>
<li><a href="redis">Redis</a></li>
</ul></li>
<li>Artisan CLI

<ul>
<li><a href="artisan">Overview</a></li>
<li><a href="commands">Development</a></li>
</ul></li>
</ul>
                    </nav>
                    <!-- /docs nav -->

                    <!-- docs content -->
                    <div id="docs-content">
                        <h1>Artisan Development</h1>

<ul>
<li><a href="commands#introduction">Introduction</a></li>
<li><a href="commands#building-a-command">Building A Command</a></li>
<li><a href="commands#registering-commands">Registering Commands</a></li>
<li><a href="commands#calling-other-commands">Calling Other Commands</a></li>
</ul>

<p><a name="introduction"></a></p>

<h2>Introduction</h2>

<p>In addition to the commands provided with Artisan, you may also build your own custom commands for working with your application. You may store your custom commands in the <code>app/commands</code> directory; however, you are free to choose your own storage location as long as your commands can be autoloaded based on your <code>composer.json</code> settings.</p>

<p><a name="building-a-command"></a></p>

<h2>Building A Command</h2>

<h3>Generating The Class</h3>

<p>To create a new command, you may use the <code>command:make</code> Artisan command, which will generate a command stub to help you get started:</p>

<p><strong>Generate A New Command Class</strong></p>

<pre><code>php artisan command:make FooCommand
</code></pre>

<p>By default, generated commands will be stored in the <code>app/commands</code> directory; however, you may specify custom path or namespace:</p>

<pre><code>php artisan command:make FooCommand --path=app/classes --namespace=Classes
</code></pre>

<h3>Writing The Command</h3>

<p>Once your command is generated, you should fill out the <code>name</code> and <code>description</code> properties of the class, which will be used when displaying your command on the <code>list</code> screen.</p>

<p>The <code>fire</code> method will be called when your command is executed. You may place any command logic in this method.</p>

<h3>Arguments &amp; Options</h3>

<p>The <code>getArguments</code> and <code>getOptions</code> methods are where you may define any arguments or options your command receives. Both of these methods return an array of commands, which are described by a list of array options.</p>

<p>When defining <code>arguments</code>, the array definition values represent the following:</p>

<pre><code>array($name, $mode, $description, $defaultValue)
</code></pre>

<p>The argument <code>mode</code> may be any of the following: <code>InputArgument::REQUIRED</code> or <code>InputArgument::OPTIONAL</code>.</p>

<p>When defining <code>options</code>, the array definition values represent the following:</p>

<pre><code>array($name, $shortcut, $mode, $description, $defaultValue)
</code></pre>

<p>For options, the argument <code>mode</code> may be: <code>InputOption::VALUE_REQUIRED</code>, <code>InputOption::VALUE_OPTIONAL</code>, <code>InputOption::VALUE_IS_ARRAY</code>, <code>InputOption::VALUE_NONE</code>.</p>

<p>The <code>VALUE_IS_ARRAY</code> mode indicates that the switch may be used multiple times when calling the command:</p>

<pre><code>php artisan foo --option=bar --option=baz
</code></pre>

<p>The <code>VALUE_NONE</code> option indicates that the option is simply used as a "switch":</p>

<pre><code>php artisan foo --option
</code></pre>

<h3>Retrieving Input</h3>

<p>While your command is executing, you will obviously need to access the values for the arguments and options accepted by your application. To do so, you may use the <code>argument</code> and <code>option</code> methods:</p>

<p><strong>Retrieving The Value Of A Command Argument</strong></p>

<pre><code>$value = $this-&gt;argument('name');
</code></pre>

<p><strong>Retrieving All Arguments</strong></p>

<pre><code>$arguments = $this-&gt;argument();
</code></pre>

<p><strong>Retrieving The Value Of A Command Option</strong></p>

<pre><code>$value = $this-&gt;option('name');
</code></pre>

<p><strong>Retrieving All Options</strong></p>

<pre><code>$options = $this-&gt;option();
</code></pre>

<h3>Writing Output</h3>

<p>To send output to the console, you may use the <code>info</code>, <code>comment</code>, <code>question</code> and <code>error</code> methods. Each of these methods will use the appropriate ANSI colors for their purpose.</p>

<p><strong>Sending Information To The Console</strong></p>

<pre><code>$this-&gt;info('Display this on the screen');
</code></pre>

<p><strong>Sending An Error Message To The Console</strong></p>

<pre><code>$this-&gt;error('Something went wrong!');
</code></pre>

<h3>Asking Questions</h3>

<p>You may also use the <code>ask</code> and <code>confirm</code> methods to prompt the user for input:</p>

<p><strong>Asking The User For Input</strong></p>

<pre><code>$name = $this-&gt;ask('What is your name?');
</code></pre>

<p><strong>Asking The User For Secret Input</strong></p>

<pre><code>$password = $this-&gt;secret('What is the password?');
</code></pre>

<p><strong>Asking The User For Confirmation</strong></p>

<pre><code>if ($this-&gt;confirm('Do you wish to continue? [yes|no]'))
{
    //
}
</code></pre>

<p>You may also specify a default value to the <code>confirm</code> method, which should be <code>true</code> or <code>false</code>:</p>

<pre><code>$this-&gt;confirm($question, true);
</code></pre>

<p><a name="registering-commands"></a></p>

<h2>Registering Commands</h2>

<p>Once your command is finished, you need to register it with Artisan so it will be available for use. This is typically done in the <code>app/start/artisan.php</code> file. Within this file, you may use the <code>Artisan::add</code> method to register the command:</p>

<p><strong>Registering An Artisan Command</strong></p>

<pre><code>Artisan::add(new CustomCommand);
</code></pre>

<p>If your command is registered in the application <a href="ioc">IoC container</a>, you may use the <code>Artisan::resolve</code> method to make it available to Artisan:</p>

<p><strong>Registering A Command That Is In The IoC Container</strong></p>

<pre><code>Artisan::resolve('binding.name');
</code></pre>

<p><a name="calling-other-commands"></a></p>

<h2>Calling Other Commands</h2>

<p>Sometimes you may wish to call other commands from your command. You may do so using the <code>call</code> method:</p>

<p><strong>Calling Another Command</strong></p>

<pre><code>$this-&gt;call('command.name', array('argument' =&gt; 'foo', '--option' =&gt; 'bar'));
</code></pre>
                    </div>
                    <!-- /docs content -->

                </article>
    	    </section>
    	    <!-- /docs -->

        </div>
    	<!-- /content -->

        <!-- footer -->
        <footer id="foot" class="textcenter">
            <div class="boxed">

                <!-- nav -->
                <nav id="secondary">
                    <div id="logo-foot">
        	           <a href="../index.html"><img src="../assets/img/logo-foot.png" alt="Laravel" /></a>
        	        </div>
                    <ul>
                        <li><a href="../index.html">Welcome</a></li>
                        <li class="current-item"><a href="docs" title="Documentation">Documentation</a></li>
                        <li><a href="api/4.0" title="Laravel Framework API">API</a></li>
                        <li><a href="https://github.com/laravel/laravel" title="Github">Github</a></li>
                        <li><a href="http://laravel.io/forum" title="Laravel Forums">Forums</a></li>
                        <li><a href="http://twitter.com/laravelphp" title="Laravel on Twitter">Twitter</a></li>
                    </ul>
                </nav>
                <!-- /nav -->

            </div>
        </footer>
        <!-- /footer -->

        <!-- to the top -->
        <div id="top">
            <a href="commands#index" title="Back to the top">
                <i class="icon-chevron-up"></i>
            </a>
        </div>
        <!-- /to the top -->

    </div>
    <!-- /wrapper -->

    <!-- copyright -->
    <section id="copyright" class="textcenter">
        <div class="boxed">
            <div class="animated slideInLeft">Laravel is a trademark of Taylor Otwell. Copyright &copy; <a href="http://twitter.com/taylorotwell" title="Taylor Otwell" target="_blank">Taylor Otwell</a>. Website built with &hearts; <a href="http://ikreativ.com/" title="iKreativ" target="_blank">iKreativ</a>.</div>
        </div>
    </section>
    <!-- /copyright -->

</body>
</html>
